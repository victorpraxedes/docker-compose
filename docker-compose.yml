version: '2.1'
services:

############# networking/database core images #############

  postgres:
    image: "postgres:9.4-alpine"
    environment:
      POSTGRES_USER: "kong"
      POSTGRES_DB: "kong"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: json-file
      options:
        max-size: 100m

  kong-migration:
    image: dojot/kong:0.3.0-nightly20180607
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - KONG_DATABASE=postgres
      - KONG_PG_HOST=postgres
    command: kong migrations up
    restart: on-failure

  apigw:
    image: dojot/kong:0.3.0-nightly20180607
    restart: on-failure
    depends_on:
      postgres:
        condition: service_healthy
    depends_on:
      - kong-migration
    ports:
      - "8000:8000"
    environment:
      KONG_DATABASE: "postgres"
      KONG_PG_HOST: "postgres"
    volumes:
      - ./apigw/plugins/pep-kong:/plugins/pep-kong:Z
      - ./apigw/plugins/mutualauthentication:/plugins/mutualauthentication:Z
    logging:
      driver: json-file
      options:
        max-size: 100m

  kong-config:
    image: appropriate/curl
    entrypoint: /opt/kong.config.sh
    restart: on-failure
    depends_on:
      - apigw
    volumes:
      - ./kong.config.sh:/opt/kong.config.sh:Z

  zookeeper:
    image: "zookeeper:3.4"
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  kafka:
    image: "ches/kafka:0.10.1.1"
    depends_on:
      - zookeeper
    restart: always
    environment:
      ZOOKEEPER_IP: zookeeper
      KAFKA_NUM_PARTITIONS: 10
    logging:
      driver: json-file
      options:
        max-size: 100m

  mongodb:
    image: "mongo:3.2"
    restart: always
    user: "mongodb"
    logging:
      driver: json-file
      options:
        max-size: 100m

############# Dojot components #############
  
  gui:
    image: dojot/gui:0.3.0-nightly20180607
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  rabbitmq:
    image: rabbitmq:3.7-alpine
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  auth-redis:
    image: redis:alpine
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  auth:
    image: dojot/auth:0.3.0-nightly20180607
    restart: always
    depends_on:
      - postgres
      - kafka
      - apigw
      - auth-redis
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AUTH_DB_HOST: "postgres"
      AUTH_DB_USER: "kong"
      AUTH_KONG_URL: "http://apigw:8001"
      AUTH_CACHE_HOST: "auth-redis"
      # This is used to select the type of cache to be used. Allowed values are
      # "redis" or "nocache"
      AUTH_CACHE_NAME: "redis"
    logging:
      driver: json-file
      options:
        max-size: 100m

  flowbroker:
    image: dojot/flowbroker:0.3.0-nightly20180607
    restart: always
    depends_on:
      - rabbitmq
      - auth
      - mongodb
      - kafka
    networks:
      - default
      - flowbroker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:Z

  data-broker-redis:
    image: redis:alpine
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  data-broker:
    image: dojot/data-broker:0.3.0-nightly20180607
    restart: always
    depends_on:
      - kafka
      - data-broker-redis
    logging:
      driver: json-file
      options:
        max-size: 100m

  device-manager-redis:
    image: redis:alpine
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  device-manager:
    image: dojot/device-manager:0.3.0-nightly20180607
    restart: always
    environment:
      # TODO: Fill these env variables with suitable values
      - DEV_MNGR_CRYPTO_PASS="kamehameHA"
      - DEV_MNGR_CRYPTO_IV=1234567890123456
      - DEV_MNGR_CRYPTO_SALT="shuriken"
    depends_on:
      - postgres
      - kafka
      - data-broker
      - device-manager-redis
    logging:
      driver: json-file
      options:
        max-size: 100m

  mosca-redis:
    image: redis:alpine
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  iotagent-mqtt:
    image: dojot/iotagent-mosca:0.3.0-nightly20180607
    depends_on:
      - mosca-redis
      - kafka
      - auth
      - data-broker
    ports:
      - 1883:1883
      - 8883:8883
    restart: always
    logging:
      driver: json-file
      options:
        max-size: 100m

  history:
    image: dojot/history:0.3.0-nightly20180607
    restart: always
    depends_on:
      - mongodb
    environment:
      FALCON_SETTINGS_MODULE: 'history.settings.docker'
    logging:
      driver: json-file
      options:
        max-size: 100m

  persister:
    image: dojot/persister:0.3.0-nightly20180607
    restart: always
    depends_on:
      - mongodb
      - kafka
      - auth
      - data-broker
    environment:
      FALCON_SETTINGS_MODULE: 'history.settings.docker'
    logging:
      driver: json-file
      options:
        max-size: 100m

networks:
  flowbroker:




